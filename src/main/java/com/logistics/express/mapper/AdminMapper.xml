<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.express.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.express.entity.Admin" >
    <id column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="admin_name" property="adminName" jdbcType="VARCHAR" />
    <result column="admin_phone" property="adminPhone" jdbcType="VARCHAR" />
    <result column="admin_password" property="adminPassword" jdbcType="VARCHAR" />
    <result column="admin_role_id" property="adminRoleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    admin_id, admin_name, admin_phone, admin_password, admin_role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.logistics.express.entity.Admin" >
    insert into admin (admin_id, admin_name, admin_phone, 
      admin_password, admin_role_id)
    values (#{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{adminPhone,jdbcType=VARCHAR}, 
      #{adminPassword,jdbcType=VARCHAR}, #{adminRoleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.express.entity.Admin" >
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="adminPhone != null" >
        admin_phone,
      </if>
      <if test="adminPassword != null" >
        admin_password,
      </if>
      <if test="adminRoleId != null" >
        admin_role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminPhone != null" >
        #{adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null" >
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminRoleId != null" >
        #{adminRoleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.express.entity.Admin" >
    update admin
    <set >
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminPhone != null" >
        admin_phone = #{adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null" >
        admin_password = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminRoleId != null" >
        admin_role_id = #{adminRoleId,jdbcType=INTEGER},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.express.entity.Admin" >
    update admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_phone = #{adminPhone,jdbcType=VARCHAR},
      admin_password = #{adminPassword,jdbcType=VARCHAR},
      admin_role_id = #{adminRoleId,jdbcType=INTEGER}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <!-- 登录验证 -->
  <select id="login" parameterType="map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
    from admin
    where admin_phone = #{adminPhone} and admin_password = #{adminPassword}
  </select>
  <!-- 修改管理员密码 -->
  <update id="editPassword" parameterType="map" >
  	update
  	admin
  	set admin_password = #{adminPassword}
  	where admin_phone = #{adminPhone}
  </update>
  <!-- 根据手机号查询管理员 -->
  <select id="getAdminByPhone" parameterType="String" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
    from admin
    where admin_phone = #{adminPhone}
  </select>
  <!-- 根据角色id获取管理员列表 -->
  <select id="getAdminListByRoleId" parameterType="map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
    from admin
    where admin_role_id = #{roleId}
    limit #{start},#{pagesize}
  </select>
  <!-- 根据角色id获取管理员数量 -->
  <select id="getAdminCount" parameterType="int" resultType="int">
  	select count(*)
  	from admin
  	where admin_role_id = #{roleId}
  </select>
  <!-- 根据名字获取管理员信息 -->
  <select id="getAdminByName" parameterType="map" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from admin
    where admin_role_id = #{roleId} and admin_name like concat('%',#{adminName},'%')
  </select>
  <!-- 修改密码 -->
  <update id="changePassword" parameterType="map" >
  	update admin
  	set admin_password = #{adminPassword}
  	where admin_phone = #{adminPhone}
  </update>
  <!-- 判断用户密码是否正确 -->
  <select id="checkAdmin" parameterType="map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
    from admin
    where admin_phone = #{adminPhone} and admin_password = #{adminPassword}
  </select>
</mapper>